# The pattern used to detect url's inside css
cssUrlRewrite.fallbackCssDataUriProcessor=(?is)([\w-]*\s*?:[^{]*?\b(?:src\b\s*=\s*['"](.*?)['"].*?|url\b\s*\(\s*['"]?(.*?)['"]?\s*\)).*?)(?=(?:[\s|\r|\n]*?[\w-]*\s*:|}))
cssUrlRewrite=(?is)src\b\s*=\s*['"](.*?)['"]|url\b\s*\(\s*['"]?(.*?)['"]?\s*\)

# Identifies @import url's inside css files
cssImport=(?i)@import\s*(?:url\()?[\"']?([^\"')]+)[\"')]?\)?;?

#cssImportFromComments=(?:/\*(?:[^*]|(?:\*+[^*/]))*\*+/)|(?://.*)
cssImportFromComments=(?:/\*(?:[^*]|(?:\*+[^*/]))*+\*+/)|(?://.*+)

# Search for variables definition. Example: @variables { var1: white; var2: #fff; } 
cssVariables.definition=(?is)@variables\s*\{(.*?)\}

#parse variables body & to extract mapping between variable & its value.
cssVariables.body=(?i)([^:\s]*)\s*:\s*(.+?);

#parse variables body & to extract mapping between variable & its value. Example: var(corporateLogo); 
cssVariables.holder=(?i)var\s*\((.+?)\)

# Search for mangled Accept-Encoding header.
requestHeader.acceptEncoding=(?im)^(Accept-Encoding|Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$

# Search if gzip is supported
requestHeader.gzip=(?im)^((gzip|deflate)\s?,?\s?(gzip|deflate)?.*|X{4,13}|~{4,13}|-{4,13})$

# Detects copyright comments
comment.copyright=(?ims)/\*!.*?\*/

# Detects a singleline comment
comment.singleline=[\t ]*//.*?$

comment.multiline=(?ims)[\t ]*/\*.*?\*/[\r\n]?

# Detects debug js statements
javascript.consoleStripper=console.(log|debug|info|count)(\(.*)\);

# check if the last character is a semicolon and append only if one is missing.
javascript.hasSemicolon=(?is).*;[\s\r\n]*$

#Detects an empty line
emptyLine=^[\t ]*$\r?\n

# Detects a placeholder. Example: ${COLOR}. Used for PlaceholderProcessor
placeholder=(?ims)\$\{((.*?))}