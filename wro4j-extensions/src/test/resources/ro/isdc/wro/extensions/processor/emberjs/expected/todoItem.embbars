(function() {Ember.TEMPLATES['todoItem'] = Ember.Handlebars.template(
function anonymous(Handlebars, depth0, helpers, partials, data) {
    helpers = helpers || Ember.Handlebars.helpers;
    var buffer = "", stack1, stack2, stack3, stack4, tmp1, self = this, functionType = "function", blockHelperMissing = helpers.blockHelperMissing, helperMissing = helpers.helperMissing, undef = void 0, escapeExpression = this.escapeExpression;
    function program1(depth0, data) {
        data.buffer.push("checked=\"checked\"");
    }
    data.buffer.push("<div class=\"display row-fluid span5\">Fluid\n  <input type=\"checkbox\" class=\"check\" ");
    stack1 = helpers.done || depth0.done;
    tmp1 = self.program(1, program1, data);
    tmp1.hash = {};
    tmp1.contexts = [];
    tmp1.fn = tmp1;
    tmp1.inverse = self.noop;
    tmp1.data = data;
    if (typeof stack1 === functionType) {
        stack1 = stack1.call(depth0, tmp1);
    } else {
        stack1 = blockHelperMissing.call(depth0, stack1, tmp1);
    }
    if (stack1 || stack1 === 0) {
        data.buffer.push(stack1);
    }
    data.buffer.push(" />\n  <label class=\"todo-content span3\">");
    stack1 = depth0;
    stack2 = "content";
    stack3 = {};
    stack4 = "true";
    stack3["escaped"] = stack4;
    stack4 = helpers._triageMustache || depth0._triageMustache;
    tmp1 = {};
    tmp1.hash = stack3;
    tmp1.contexts = [];
    tmp1.contexts.push(stack1);
    tmp1.data = data;
    if (typeof stack4 === functionType) {
        stack1 = stack4.call(depth0, stack2, tmp1);
    } else {
        if (stack4 === undef) {
            stack1 = helperMissing.call(depth0, "_triageMustache", stack2, tmp1);
        } else {
            stack1 = stack4;
        }
    }
    data.buffer.push(escapeExpression(stack1) + "</label>\n  <i class=\"icon-remove-sign remove\" title=\"Remove\"></i>\n</div>\n<div class=\"edit row-fluid\">\n  <input type=\"text\" class=\"todo-edit span4\" value=\"");
    stack1 = depth0;
    stack2 = "content";
    stack3 = {};
    stack4 = "true";
    stack3["escaped"] = stack4;
    stack4 = helpers._triageMustache || depth0._triageMustache;
    tmp1 = {};
    tmp1.hash = stack3;
    tmp1.contexts = [];
    tmp1.contexts.push(stack1);
    tmp1.data = data;
    if (typeof stack4 === functionType) {
        stack1 = stack4.call(depth0, stack2, tmp1);
    } else {
        if (stack4 === undef) {
            stack1 = helperMissing.call(depth0, "_triageMustache", stack2, tmp1);
        } else {
            stack1 = stack4;
        }
    }
    data.buffer.push(escapeExpression(stack1) + "\" />\n</div>");
    return buffer;
}
)})();